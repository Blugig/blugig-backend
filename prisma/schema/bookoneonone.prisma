// Admin creates these time slots
model TimeSlot {
    id         Int     @id @default(autoincrement())
    start_time String // "9:00 AM", "2:30 PM", etc.
    capacity   Int     @default(1) // How many bookings per slot
    is_active  Boolean @default(true)

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt

    // Relations
    bookings TimeSlotBooking[]

    @@map("time_slots")
}

// Track bookings for each date
model TimeSlotBooking {
    id   Int      @id @default(autoincrement())
    date DateTime // Date of the booking (2024-03-15)

    time_slot_id Int
    time_slot    TimeSlot @relation(fields: [time_slot_id], references: [id])

    book_one_on_one_id Int      @unique // Added @unique for one-to-one relation
    book_one_on_one    BookOneOnOne @relation(fields: [book_one_on_one_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    booked_at DateTime @default(now())

    @@map("time_slot_bookings")
}

// Update BookOneOnOne
model BookOneOnOne {
    id                    Int    @id @default(autoincrement())
    preferred_date        String // Keep as backup
    preferred_time        String // Keep as backup
    consultation_focus    String
    smartsheet_experience String
    team_size             String

    form_submission_id Int            @unique
    form_submission    FormSubmission @relation(fields: [form_submission_id], references: [id], onDelete: Cascade)

    // New relation
    slot_booking TimeSlotBooking?

    @@map("book_one_on_ones")
}
